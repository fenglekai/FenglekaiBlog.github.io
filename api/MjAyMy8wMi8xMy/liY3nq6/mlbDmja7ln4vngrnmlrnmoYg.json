{"title":"前端数据埋点方案","date":"2023-02-13T08:28:04.000Z","date_formatted":{"ll":"2023年2月13日","L":"2023/02/13","MM-DD":"02-13"},"thumbnail":"https://picsum.photos/1280/720?random=16","color":"#111","link":"2023/02/13/前端数据埋点方案","tags":["💖分享","📔笔记"],"updated":"2023-02-13T08:28:40.171Z","content":"<p>为了实现统计访客浏览、停留时间以及页面等操作。在访问量大，操作频繁的页面进行优化。根据分析出来的结果辅助产品优化、迭代、以及新需求的开发。</p>\n<blockquote>\n<p>参考自稀土掘金文章<a href=\"https://juejin.cn/post/7094146488439144455\" target=\"_blank\">https://juejin.cn/post/7094146488439144455</a></p>\n<p>简单实现 <a href=\"https://juejin.cn/post/7047710777507053582\" target=\"_blank\">https://juejin.cn/post/7047710777507053582</a></p>\n</blockquote>\n<h2 id=\"一些名词\">一些名词<a title=\"#一些名词\" href=\"#一些名词\"></a></h2>\n<h3 id=\"uv（unique-visitor）\">UV（Unique Visitor）<a title=\"#uv（unique-visitor）\" href=\"#uv（unique-visitor）\"></a></h3>\n<p>通过互联网访问、浏览这个网页的自然人。访问网站的一台电脑客户端为一个访客。<strong>0-24</strong>小时内相同的客户端只被计算一次。一天内同个访客多次访问仅计算一个UV</p>\n<h3 id=\"ip（internet-protocol）\">IP（Internet Protocol）<a title=\"#ip（internet-protocol）\" href=\"#ip（internet-protocol）\"></a></h3>\n<p>访问过站点的IP总数，以用户的IP地址作为统计依据。0-24小时内相同IP地址只被计算一次</p>\n<blockquote>\n<p>如：你和你的家人用各自的账号在同一台电脑上登录新浪微博，则<code>IP</code>数+1，<code>UV</code>数+2。由于使用的是同一台电脑，所以<code>IP</code>不变，但使用的不同账号，所以<code>UV</code>+2</p>\n</blockquote>\n<h3 id=\"pv（page-view）\">PV（Page View）<a title=\"#pv（page-view）\" href=\"#pv（page-view）\"></a></h3>\n<p>即页面浏览量或点击量，用户每一次对网站中每个网页访问均被纪录一个PV。用户对同一页面的多次访问，访问量累计，用以衡量网站用户访问的网页数量。</p>\n<h3 id=\"vv（visit-view）\">VV（Visit View）<a title=\"#vv（visit-view）\" href=\"#vv（visit-view）\"></a></h3>\n<p>统计所有访客一天内访问站点的次数。当访客完成所有浏览并关掉网站页面完成一次访问，同一访客一天内可能有多次访问行为，访问次数累计。</p>\n<h2 id=\"埋点方案\">埋点方案<a title=\"#埋点方案\" href=\"#埋点方案\"></a></h2>\n<h3 id=\"代码埋点\">代码埋点<a title=\"#代码埋点\" href=\"#代码埋点\"></a></h3>\n<p>用户触发某个动作后手动上报数据 优点：是最准确的，可以满足很多定制化的需求。 缺点：埋点逻辑与业务代码耦合到一起，不利于代码维护和复用。</p>\n<h3 id=\"可视化埋点\">可视化埋点<a title=\"#可视化埋点\" href=\"#可视化埋点\"></a></h3>\n<p>通过可视化工具配置采集节点，指定自己想要监测的元素和属性。核心是查找 dom 然后绑定事件，业界比较有名的是 Mixpanel、GrowingIO、神策 优点：可以做到按需配置，又不会像全埋点那样产生大量的无用数据。 缺点：比较难加载一些运行时参数；页面结构发生变化的时候，可能就需要进行部分重新配置。</p>\n<h3 id=\"无痕埋点（全埋点）\">无痕埋点（全埋点）<a title=\"#无痕埋点（全埋点）\" href=\"#无痕埋点（全埋点）\"></a></h3>\n<p>前端自动采集全部事件并上报埋点数据，在后端数据计算时过滤出有用数据 优点：收集用户的所有端上行为，很全面。 缺点：无效的数据很多、上报数据量大。</p>\n<h2 id=\"案例参考引用链接\">案例参考引用链接<a title=\"#案例参考引用链接\" href=\"#案例参考引用链接\"></a></h2>\n","prev":{"title":"前端SEO优化","link":"2023/02/13/前端SEO优化"},"next":{"title":"Unicode编码顺序","link":"2023/02/13/Unicode编码顺序"},"plink":"https://fenglekai.github.io/2023/02/13/前端数据埋点方案/","toc":[{"id":"一些名词","title":"一些名词","index":"1","children":[{"id":"uv（unique-visitor）","title":"UV（Unique Visitor）","index":"1.1"},{"id":"ip（internet-protocol）","title":"IP（Internet Protocol）","index":"1.2"},{"id":"pv（page-view）","title":"PV（Page View）","index":"1.3"},{"id":"vv（visit-view）","title":"VV（Visit View）","index":"1.4"}]},{"id":"埋点方案","title":"埋点方案","index":"2","children":[{"id":"代码埋点","title":"代码埋点","index":"2.1"},{"id":"可视化埋点","title":"可视化埋点","index":"2.2"},{"id":"无痕埋点（全埋点）","title":"无痕埋点（全埋点）","index":"2.3"}]},{"id":"案例参考引用链接","title":"案例参考引用链接","index":"3"}],"reading_time":"660 字约 4 分钟"}